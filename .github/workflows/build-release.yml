name: Cross-Platform Build

on:
  push:
    branches:
      - 'v*'
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux x64
          - bun-target: bun-linux-x64
            chrome-platform: linux64
            artifact-suffix: linux-x64

          # Linux ARM64
          - bun-target: bun-linux-arm64
            chrome-platform: linux64
            artifact-suffix: linux-arm64

          # Windows x64
          - bun-target: bun-windows-x64-modern
            chrome-platform: win64
            artifact-suffix: win64

          # macOS x64
          - bun-target: bun-darwin-x64
            chrome-platform: mac-x64
            artifact-suffix: mac-x64

          # macOS ARM64
          - bun-target: bun-darwin-arm64
            chrome-platform: mac-arm64
            artifact-suffix: mac-arm64

    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Download Chrome for platform
        run: bun run build/chrome-download.ts --platform=${{ matrix.chrome-platform }}

      - name: Build executable
        run: bun build --compile --target=${{ matrix.bun-target }} --minify --sourcemap src/main.ts --outfile pupprinteer-${{ github.ref_name }}-${{ matrix.artifact-suffix }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: pupprinteer-${{ github.ref_name }}-${{ matrix.artifact-suffix }}
          path: pupprinteer-${{ github.ref_name }}-${{ matrix.artifact-suffix }}${{ matrix.artifact-suffix == 'win64' && '.exe' || '' }}

  build-test:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact-suffix: linux-x64
          - os: windows-latest
            artifact-suffix: win64
          - os: macos-latest-large
            artifact-suffix: mac-x64
          - os: macos-latest
            artifact-suffix: mac-arm64
    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: pupprinteer-${{ github.ref_name }}-${{ matrix.artifact-suffix }}
          path: __tests__/binary/bin/

      - name: Make binary executable (non-Windows)
        if: matrix.os != 'windows-latest'
        run: chmod +x __tests__/binary/bin/pupprinteer-${{ github.ref_name }}-${{ matrix.artifact-suffix }}

      - name: Disable AppArmor
        if: matrix.os == 'ubuntu-latest'
        run: echo 0 | sudo tee /proc/sys/kernel/apparmor_restrict_unprivileged_userns

      - name: Test binary before uploading artifact
        run: bun test __tests__/binary/binary.test.ts

  release:
    needs: build-test
    runs-on: ubuntu-latest
    # Only run this job when a tag is pushed, not for branch pushes
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      # Create GitHub Release
      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: softprops/action-gh-release@v2
        with:
          files: pupprinteer-${{ github.ref_name }}-*/*
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
